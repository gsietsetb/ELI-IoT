.TH "/home/guille/msm/net/mac80211/rx.c" 3 "Sun Jun 1 2014" "Version 1.0" "net_mac80211" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/guille/msm/net/mac80211/rx.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <linux/jiffies\&.h>\fP
.br
\fC#include <linux/slab\&.h>\fP
.br
\fC#include <linux/kernel\&.h>\fP
.br
\fC#include <linux/skbuff\&.h>\fP
.br
\fC#include <linux/netdevice\&.h>\fP
.br
\fC#include <linux/etherdevice\&.h>\fP
.br
\fC#include <linux/rcupdate\&.h>\fP
.br
\fC#include <linux/export\&.h>\fP
.br
\fC#include <net/mac80211\&.h>\fP
.br
\fC#include <net/ieee80211_radiotap\&.h>\fP
.br
\fC#include <asm/unaligned\&.h>\fP
.br
\fC#include 'ieee80211_i\&.h'\fP
.br
\fC#include 'driver-ops\&.h'\fP
.br
\fC#include 'led\&.h'\fP
.br
\fC#include 'mesh\&.h'\fP
.br
\fC#include 'wep\&.h'\fP
.br
\fC#include 'wpa\&.h'\fP
.br
\fC#include 'tkip\&.h'\fP
.br
\fC#include 'wme\&.h'\fP
.br
\fC#include 'rate\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBSEQ_MODULO\fP   0x1000"
.br
.ti -1c
.RI "#define \fBSEQ_MASK\fP   0xfff"
.br
.ti -1c
.RI "#define \fBHT_RX_REORDER_BUF_TIMEOUT\fP   (HZ / 10)"
.br
.ti -1c
.RI "#define \fBCALL_RXH\fP(rxh)"
.br
.ti -1c
.RI "#define \fBCALL_RXH\fP(rxh)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBieee80211_sta_ps_transition\fP (struct ieee80211_sta *sta, bool start)"
.br
.ti -1c
.RI "\fBEXPORT_SYMBOL\fP (\fBieee80211_sta_ps_transition\fP)"
.br
.ti -1c
.RI "void \fBieee80211_release_reorder_timeout\fP (struct \fBsta_info\fP *sta, int tid)"
.br
.ti -1c
.RI "void \fBieee80211_rx\fP (struct ieee80211_hw *hw, struct sk_buff *skb)"
.br
.ti -1c
.RI "\fBEXPORT_SYMBOL\fP (\fBieee80211_rx\fP)"
.br
.ti -1c
.RI "void \fBieee80211_rx_irqsafe\fP (struct ieee80211_hw *hw, struct sk_buff *skb)"
.br
.ti -1c
.RI "\fBEXPORT_SYMBOL\fP (\fBieee80211_rx_irqsafe\fP)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define CALL_RXH(rxh)"
\fBValue:\fP
.PP
.nf
do {                \
        res = rxh(rx);      \
        if (res != RX_CONTINUE) \
            goto rxh_next;  \
    } while (0);
.fi
.SS "#define CALL_RXH(rxh)"
\fBValue:\fP
.PP
.nf
do {               \
        res = rxh(rx);      \
        if (res != RX_CONTINUE) \
            goto rxh_next;  \
    } while (0);
.fi
.SS "#define HT_RX_REORDER_BUF_TIMEOUT   (HZ / 10)"

.PP
Definition at line 604 of file rx\&.c\&.
.SS "#define SEQ_MASK   0xfff"

.PP
Definition at line 538 of file rx\&.c\&.
.SS "#define SEQ_MODULO   0x1000"

.PP
Definition at line 537 of file rx\&.c\&.
.SH "Function Documentation"
.PP 
.SS "EXPORT_SYMBOL (\fBieee80211_sta_ps_transition\fP)"

.SS "EXPORT_SYMBOL (\fBieee80211_rx\fP)"

.SS "EXPORT_SYMBOL (\fBieee80211_rx_irqsafe\fP)"

.SS "void ieee80211_release_reorder_timeout (struct \fBsta_info\fP *sta, inttid)"

.PP
Definition at line 2738 of file rx\&.c\&.
.SS "void ieee80211_rx (struct ieee80211_hw *hw, struct sk_buff *skb)"

.PP
Definition at line 3011 of file rx\&.c\&.
.SS "void ieee80211_rx_irqsafe (struct ieee80211_hw *hw, struct sk_buff *skb)"

.PP
Definition at line 3114 of file rx\&.c\&.
.SS "int ieee80211_sta_ps_transition (struct ieee80211_sta *sta, boolstart)"

.PP
Definition at line 1163 of file rx\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for net_mac80211 from the source code\&.
