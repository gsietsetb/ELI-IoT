.TH "/home/guille/msm/net/mac80211/mesh.c" 3 "Sun Jun 1 2014" "Version 1.0" "net_mac80211" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/guille/msm/net/mac80211/mesh.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <linux/slab\&.h>\fP
.br
\fC#include <asm/unaligned\&.h>\fP
.br
\fC#include 'ieee80211_i\&.h'\fP
.br
\fC#include 'mesh\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBMESHCONF_CAPAB_ACCEPT_PLINKS\fP   0x01"
.br
.ti -1c
.RI "#define \fBMESHCONF_CAPAB_FORWARDING\fP   0x08"
.br
.ti -1c
.RI "#define \fBTMR_RUNNING_HK\fP   0"
.br
.ti -1c
.RI "#define \fBTMR_RUNNING_MP\fP   1"
.br
.ti -1c
.RI "#define \fBTMR_RUNNING_MPR\fP   2"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "bool \fBmesh_action_is_path_sel\fP (struct ieee80211_mgmt *mgmt)"
.br
.ti -1c
.RI "void \fBieee80211s_init\fP (void)"
.br
.ti -1c
.RI "void \fBieee80211s_stop\fP (void)"
.br
.ti -1c
.RI "bool \fBmesh_matches_local\fP (struct \fBieee802_11_elems\fP *ie, struct \fBieee80211_sub_if_data\fP *sdata)"
.br
.ti -1c
.RI "bool \fBmesh_peer_accepts_plinks\fP (struct \fBieee802_11_elems\fP *ie)"
.br
.ti -1c
.RI "void \fBmesh_accept_plinks_update\fP (struct \fBieee80211_sub_if_data\fP *sdata)"
.br
.ti -1c
.RI "int \fBmesh_rmc_init\fP (struct \fBieee80211_sub_if_data\fP *sdata)"
.br
.ti -1c
.RI "void \fBmesh_rmc_free\fP (struct \fBieee80211_sub_if_data\fP *sdata)"
.br
.ti -1c
.RI "int \fBmesh_rmc_check\fP (u8 *sa, struct ieee80211s_hdr *mesh_hdr, struct \fBieee80211_sub_if_data\fP *sdata)"
.br
.ti -1c
.RI "int \fBmesh_add_meshconf_ie\fP (struct sk_buff *skb, struct \fBieee80211_sub_if_data\fP *sdata)"
.br
.ti -1c
.RI "int \fBmesh_add_meshid_ie\fP (struct sk_buff *skb, struct \fBieee80211_sub_if_data\fP *sdata)"
.br
.ti -1c
.RI "int \fBmesh_add_vendor_ies\fP (struct sk_buff *skb, struct \fBieee80211_sub_if_data\fP *sdata)"
.br
.ti -1c
.RI "int \fBmesh_add_rsn_ie\fP (struct sk_buff *skb, struct \fBieee80211_sub_if_data\fP *sdata)"
.br
.ti -1c
.RI "int \fBmesh_add_ds_params_ie\fP (struct sk_buff *skb, struct \fBieee80211_sub_if_data\fP *sdata)"
.br
.ti -1c
.RI "int \fBmesh_add_ht_cap_ie\fP (struct sk_buff *skb, struct \fBieee80211_sub_if_data\fP *sdata)"
.br
.ti -1c
.RI "int \fBmesh_add_ht_info_ie\fP (struct sk_buff *skb, struct \fBieee80211_sub_if_data\fP *sdata)"
.br
.ti -1c
.RI "void \fBieee80211_mesh_root_setup\fP (struct \fBieee80211_if_mesh\fP *ifmsh)"
.br
.ti -1c
.RI "int \fBieee80211_fill_mesh_addresses\fP (struct ieee80211_hdr *hdr, __le16 *fc, const u8 *meshda, const u8 *meshsa)"
.br
.ti -1c
.RI "int \fBieee80211_new_mesh_header\fP (struct ieee80211s_hdr *meshhdr, struct \fBieee80211_sub_if_data\fP *sdata, char *addr4or5, char *addr6)"
.br
.ti -1c
.RI "void \fBieee80211_start_mesh\fP (struct \fBieee80211_sub_if_data\fP *sdata)"
.br
.ti -1c
.RI "void \fBieee80211_stop_mesh\fP (struct \fBieee80211_sub_if_data\fP *sdata)"
.br
.ti -1c
.RI "void \fBieee80211_mesh_rx_queued_mgmt\fP (struct \fBieee80211_sub_if_data\fP *sdata, struct sk_buff *skb)"
.br
.ti -1c
.RI "void \fBieee80211_mesh_work\fP (struct \fBieee80211_sub_if_data\fP *sdata)"
.br
.ti -1c
.RI "void \fBieee80211_mesh_notify_scan_completed\fP (struct \fBieee80211_local\fP *local)"
.br
.ti -1c
.RI "void \fBieee80211_mesh_init_sdata\fP (struct \fBieee80211_sub_if_data\fP *sdata)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBmesh_allocated\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define MESHCONF_CAPAB_ACCEPT_PLINKS   0x01"

.PP
Definition at line 16 of file mesh\&.c\&.
.SS "#define MESHCONF_CAPAB_FORWARDING   0x08"

.PP
Definition at line 17 of file mesh\&.c\&.
.SS "#define TMR_RUNNING_HK   0"

.PP
Definition at line 19 of file mesh\&.c\&.
.SS "#define TMR_RUNNING_MP   1"

.PP
Definition at line 20 of file mesh\&.c\&.
.SS "#define TMR_RUNNING_MPR   2"

.PP
Definition at line 21 of file mesh\&.c\&.
.SH "Function Documentation"
.PP 
.SS "int ieee80211_fill_mesh_addresses (struct ieee80211_hdr *hdr, __le16 *fc, const u8 *meshda, const u8 *meshsa)"
ieee80211_fill_mesh_addresses - fill addresses of a locally originated mesh frame : 802\&.11 frame header : frame control field : destination address in the mesh : source address address in the mesh\&. Same as TA, as frame is locally originated\&.
.PP
Return the length of the 802\&.11 (does not include a mesh control header) 
.PP
Definition at line 449 of file mesh\&.c\&.
.SS "void ieee80211_mesh_init_sdata (struct \fBieee80211_sub_if_data\fP *sdata)"

.PP
Definition at line 737 of file mesh\&.c\&.
.SS "void ieee80211_mesh_notify_scan_completed (struct \fBieee80211_local\fP *local)"

.PP
Definition at line 726 of file mesh\&.c\&.
.SS "void ieee80211_mesh_root_setup (struct \fBieee80211_if_mesh\fP *ifmsh)"

.PP
Definition at line 428 of file mesh\&.c\&.
.SS "void ieee80211_mesh_rx_queued_mgmt (struct \fBieee80211_sub_if_data\fP *sdata, struct sk_buff *skb)"

.PP
Definition at line 681 of file mesh\&.c\&.
.SS "void ieee80211_mesh_work (struct \fBieee80211_sub_if_data\fP *sdata)"

.PP
Definition at line 704 of file mesh\&.c\&.
.SS "int ieee80211_new_mesh_header (struct ieee80211s_hdr *meshhdr, struct \fBieee80211_sub_if_data\fP *sdata, char *addr4or5, char *addr6)"
ieee80211_new_mesh_header - create a new mesh header : uninitialized mesh header : mesh interface to be used : 1st address in the ae header, which may correspond to address 4 (if addr6 is NULL) or address 5 (if addr6 is present)\&. It may be NULL\&. : 2nd address in the ae header, which corresponds to addr6 of the mesh frame
.PP
Return the header length\&. 
.PP
Definition at line 482 of file mesh\&.c\&.
.SS "void ieee80211_start_mesh (struct \fBieee80211_sub_if_data\fP *sdata)"

.PP
Definition at line 565 of file mesh\&.c\&.
.SS "void ieee80211_stop_mesh (struct \fBieee80211_sub_if_data\fP *sdata)"

.PP
Definition at line 587 of file mesh\&.c\&.
.SS "void ieee80211s_init (void)"

.PP
Definition at line 37 of file mesh\&.c\&.
.SS "void ieee80211s_stop (void)"

.PP
Definition at line 45 of file mesh\&.c\&.
.SS "void mesh_accept_plinks_update (struct \fBieee80211_sub_if_data\fP *sdata)"
mesh_accept_plinks_update: update accepting_plink in local mesh beacons
.PP
: mesh interface in which mesh beacons are going to be updated 
.PP
Definition at line 127 of file mesh\&.c\&.
.SS "bool mesh_action_is_path_sel (struct ieee80211_mgmt *mgmt)"

.PP
Definition at line 33 of file mesh\&.c\&.
.SS "int mesh_add_ds_params_ie (struct sk_buff *skb, struct \fBieee80211_sub_if_data\fP *sdata)"

.PP
Definition at line 332 of file mesh\&.c\&.
.SS "int mesh_add_ht_cap_ie (struct sk_buff *skb, struct \fBieee80211_sub_if_data\fP *sdata)"

.PP
Definition at line 353 of file mesh\&.c\&.
.SS "int mesh_add_ht_info_ie (struct sk_buff *skb, struct \fBieee80211_sub_if_data\fP *sdata)"

.PP
Definition at line 374 of file mesh\&.c\&.
.SS "int mesh_add_meshconf_ie (struct sk_buff *skb, struct \fBieee80211_sub_if_data\fP *sdata)"

.PP
Definition at line 223 of file mesh\&.c\&.
.SS "int mesh_add_meshid_ie (struct sk_buff *skb, struct \fBieee80211_sub_if_data\fP *sdata)"

.PP
Definition at line 262 of file mesh\&.c\&.
.SS "int mesh_add_rsn_ie (struct sk_buff *skb, struct \fBieee80211_sub_if_data\fP *sdata)"

.PP
Definition at line 304 of file mesh\&.c\&.
.SS "int mesh_add_vendor_ies (struct sk_buff *skb, struct \fBieee80211_sub_if_data\fP *sdata)"

.PP
Definition at line 280 of file mesh\&.c\&.
.SS "bool mesh_matches_local (struct \fBieee802_11_elems\fP *ie, struct \fBieee80211_sub_if_data\fP *sdata)"
mesh_matches_local - check if the config of a mesh point matches ours
.PP
: information elements of a management frame from the mesh peer : local mesh subif
.PP
This function checks if the mesh configuration of a mesh point matches the local mesh configuration, i\&.e\&. if both nodes belong to the same mesh network\&. 
.PP
Definition at line 76 of file mesh\&.c\&.
.SS "bool mesh_peer_accepts_plinks (struct \fBieee802_11_elems\fP *ie)"
mesh_peer_accepts_plinks - check if an mp is willing to establish peer links
.PP
: information elements of a management frame from the mesh peer 
.PP
Definition at line 116 of file mesh\&.c\&.
.SS "int mesh_rmc_check (u8 *sa, struct ieee80211s_hdr *mesh_hdr, struct \fBieee80211_sub_if_data\fP *sdata)"
mesh_rmc_check - Check frame in recent multicast cache and add if absent\&.
.PP
\fBSee Also:\fP
.RS 4
: source address : mesh_header
.RE
.PP
Returns: 0 if the frame is not in the cache, nonzero otherwise\&.
.PP
Checks using the source address and the mesh sequence number if we have received this frame lately\&. If the frame is not in the cache, it is added to it\&. 
.PP
Definition at line 187 of file mesh\&.c\&.
.SS "void mesh_rmc_free (struct \fBieee80211_sub_if_data\fP *sdata)"

.PP
Definition at line 156 of file mesh\&.c\&.
.SS "int mesh_rmc_init (struct \fBieee80211_sub_if_data\fP *sdata)"

.PP
Definition at line 143 of file mesh\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "int mesh_allocated"

.PP
Definition at line 23 of file mesh\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for net_mac80211 from the source code\&.
